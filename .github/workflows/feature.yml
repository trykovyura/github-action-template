name: Feature

on:
  push:
    branches: [ feature/* ]
  # Trigger manually
  workflow_dispatch:

env:
  OUTPUT_DIRECTORY: ${{ vars.OUTPUT_DIRECTORY }}
  IPA_OUTPUT_PATH: ${{ vars.IPA_OUTPUT_PATH }}
  FL_UNLOCK_KEYCHAIN_PASSWORD: ${{ secrets.FL_UNLOCK_KEYCHAIN_PASSWORD }}
  FL_UNLOCK_KEYCHAIN_PATH: ${{ secrets.FL_UNLOCK_KEYCHAIN_PATH }}

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  build:

    runs-on: [self-hosted]
    timeout-minutes: 15
    env:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      LANGUAGE: en_US.UTF-8
      KEYCHAIN_NAME: ${{ secrets.KEYCHAIN_NAME }}
      KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      FASTLANE_XCODEBUILD_SETTINGS_RETRIES: ${{ secrets.FASTLANE_XCODEBUILD_SETTINGS_RETRIES }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # –®–∞–≥ –∑–∞–ø—É—Å–∫–∞–µ—Ç ssh-agent –∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –≤ –Ω–µ–≥–æ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á ssh
      # –¢–µ–º —Å–∞–º—ã–º carthage –º–æ–∂–µ—Ç –∫–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–≤–∞—Ç–Ω—ã–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ —á–µ—Ä–µ–∑ ssh
      - uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: Build setup
        uses: ./.github/actions/build-setup
      - name: Build
        run: bundle exec fastlane beta
      - uses: actions/upload-artifact@v3
        with:
          name: 'feature-artifact'
          path: ${{ vars.OUTPUT_DIRECTORY }}
          retention-days: 1
  tests:
    runs-on: [self-hosted]
    if: always()
    timeout-minutes: 15
    needs: [ build ]
    env:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      DANGER_GITHUB_API_TOKEN: ${{ secrets.DANGER_GITHUB_API_TOKEN }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: üíé Ruby setup
        uses: ./.github/actions/ruby-setup
      - name: Prepare
        run: bundle exec fastlane prepare
      - name: Test
        run: bundle exec fastlane scan
      - name: Code Coverage
        run: bundle exec danger --verbose --dangerfile=danger/Dangerfile.xcov --danger_id=code_coverage
      - uses: actions/upload-artifact@v3
        with:
          name: 'test-artifact'
          path: ${{ vars.TEST_OUTPUT_DIRECTORY }}
          retention-days: 1

  firebase_deploy:
    runs-on: [self-hosted]
    timeout-minutes: 15
    needs: [build]
    env:
      LC_ALL: en_US.UTF-8
      LANG: en_US.UTF-8
      LANGUAGE: en_US.UTF-8
      FIREBASE_APP: ${{ secrets.FIREBASE_APP }}
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      FIREBASEAPPDISTRO_APP: ${{ secrets.FIREBASEAPPDISTRO_APP }}
      FIREBASEAPPDISTRO_GROUPS: ${{ secrets.FIREBASEAPPDISTRO_GROUPS }}
    steps:
      - name: Firebase upload
        uses: ./.github/actions/firebase-upload
        with:
          artifact-name: 'feature-artifact'
          output-directory: ${{ vars.OUTPUT_DIRECTORY }}